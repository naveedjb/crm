angular.module("routerRoutes",["ngRoute"]).config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{templateUrl:"app/views/pages/home.html"}).when("/login",{templateUrl:"app/views/pages/login.html",controller:"mainCtrl",controllerAs:"login"}).when("/users",{templateUrl:"app/views/pages/all.html",controller:"userCtrl",controllerAs:"user"}).when("/users/create",{templateUrl:"app/views/pages/single.html",controller:"userCreateCtrl",controllerAs:"users"}).when("/users/:user_id",{templateUrl:"app/views/pages/single.html",controller:"userEditCtrl",controllerAs:"users"}),t.html5Mode(!0)}]),angular.module("firstApp",["routerRoutes","ngAnimate","authService","userService"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor")}]),angular.module("firstApp").controller("mainCtrl",["$rootScope","$location","Auth",function(e,t,r){var n=this;n.loggedIn=r.isLoggedIn(),n.error="",e.$on("$routeChangeStart",function(){n.loggedIn=r.isLoggedIn()}),n.doLogIn=function(){n.processing=!0,r.login(n.loginData.username,n.loginData.password).success(function(e){n.processing=!1,e.success?t.path("/users"):n.error=e.message})},n.doLogOut=function(){r.logout(),n.user={},t.path("/login")}}]),angular.module("firstApp").controller("userCtrl",["User",function(e){var t=this;t.processing=!0,e.all().success(function(e){t.processing=!1,t.users=e}),t.deleteUser=function(r){t.processing=!0,e["delete"](r).then(function(){e.all().success(function(e){t.processing=!1,t.users=e})})}}]).controller("userCreateCtrl",["User",function(e){var t=this;t.type="create",t.saveUser=function(){t.processing=!0,t.message="",e.create(t.userData).success(function(e){t.processing=!1,t.userData={},t.message=e.message})}}]).controller("userEditCtrl",["User","$routeParams",function(e,t){var r=this;r.type="edit",e.get(t.user_id).success(function(e){r.userData=e}),r.saveUser=function(){r.processing=!0,r.message="",e.update(t.user_id,r.userData).success(function(e){r.processing=!1,r.userData={},r.message=e.message})}}]),angular.module("authService",[]).factory("Auth",["$http","$q","AuthToken",function(e,t,r){var n={};return n.login=function(t,n){return e.post("/api/authenticate",{username:t,password:n}).success(function(e){return r.setToken(e.token),e})},n.logout=function(){r.setToken()},n.isLoggedIn=function(){return r.getToken()?!0:!1},n.getUser=function(){return r.getToken()?e.get("/api/me",{cache:!0}):t.reject({message:"User has no token"})},n}]).factory("AuthToken",["$window",function(e){var t={};return t.getToken=function(){return e.localStorage.getItem("token")},t.setToken=function(t){t?e.localStorage.setItem("token",t):e.localStorage.removeItem("token")},t}]).factory("AuthInterceptor",["$q","AuthToken","$location",function(e,t,r){var n={};return n.request=function(e){var r=t.getToken();return r&&(e.headers["x-access-token"]=r),e},n.responseError=function(n){return 403==n.status&&(t.setToken(),r.path("/login")),e.reject(n)},n}]),angular.module("userService",[]).factory("User",["$http",function(e){var t={};return t.get=function(t){return e.get("/api/users/"+t)},t.all=function(){return e.get("/api/users")},t.create=function(t){return e.post("/api/users",t)},t.update=function(t,r){return e.put("/api/users/"+t,r)},t["delete"]=function(t){return e["delete"]("/api/users/"+t)},t}]);